Overview

This dataset contains movie reviews along with their associated binary
sentiment polarity labels. It is intended to serve as a benchmark for
sentiment classification. This document outlines how the dataset was
gathered, and how to use the files provided.

Dataset

The core dataset contains 50,000 reviews split evenly into 25k train
and 25k test sets. The overall distribution of labels is balanced (25k
pos and 25k neg).

In the entire collection, no more than 30 reviews are allowed for any
given movie because reviews for the same movie tend to have correlated
ratings. Further, the train and test sets contain a disjoint set of
movies, so no significant performance is obtained by memorizing
movie-unique terms and their associated with observed labels.  In the
labeled train/test sets, a negative review has a score <= 4 out of 10,
and a positive review has a score >= 7 out of 10. Thus reviews with
more neutral ratings are not included in the train/test sets.

Files

There are two top-level directories [train/, test/] corresponding to
the training and test sets. Each contains [pos/, neg/] directories for
the reviews with binary labels positive and negative. Within these
directories, reviews are stored in text files named following the
convention [[id]_[rating].txt] where [id] is a unique id and [rating] is
the star rating for that review on a 1-10 scale. For example, the file
[test/pos/200_8.txt] is the text for a positive-labeled test set
example with unique id 200 and star rating 8/10 from IMDb.

We don't need to predict the specific scores for the documents,
and only need to classify them into pos vs neg in this project.


Task TBD

The text data is always hard to handle, and they are much more "dirty" than images and can contain many wrong words or noisy tokens. You may refer to the page for cleaning the text data, like to remove the stop words and punctuations and also normalize the words.

https://machinelearningmastery.com/clean-text-machine-learning-python/

After you clean the dataset, please extract the vocabulary set from the provided data. Based on the vocabulary set, please try to train a RNN model to classify the documents into either positive or negative classes with the training set. You don't need to infer the specific ratings, just binary classification should be enough for the project.
